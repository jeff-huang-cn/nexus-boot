package ${packageName}.controller.${businessName};

import cn.hutool.core.bean.BeanUtil;
import com.nexus.framework.common.result.Result;
import com.nexus.framework.common.result.PageResult;
import ${packageName}.controller.${businessName}.vo.*;
import ${packageName}.dal.dataobject.${businessName}.${className}DO;
import ${packageName}.service.${businessName}.${className}Service;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import org.springframework.web.bind.annotation.*;
import org.springframework.validation.annotation.Validated;

import jakarta.validation.Valid;
import java.util.List;
import java.util.stream.Collectors;

/**
 * ${classComment} 控制器
 *
 * @author ${author}
 * @since ${date}
 */
@Slf4j
@RestController
@RequestMapping("/api/${moduleName}/${businessName}")
@RequiredArgsConstructor
@Validated
public class ${className}Controller {

    private final ${className}Service ${classNameFirstLower}Service;

    /**
     * 创建${classComment}
     */
    @PostMapping("/create")
    public Result<Long> create(@Valid @RequestBody ${className}SaveReqVO createReqVO) {
        Long id = ${classNameFirstLower}Service.create(createReqVO);
        return Result.success(id);
    }

    /**
     * 更新${classComment}
     */
    @PutMapping("/update")
    public Result<Boolean> update(@Valid @RequestBody ${className}SaveReqVO updateReqVO) {
        ${classNameFirstLower}Service.update(updateReqVO);
        return Result.success(true);
    }

    /**
     * 删除${classComment}
     */
    @DeleteMapping("/delete/{id}")
    public Result<Boolean> delete(@PathVariable("id") Long id) {
        ${classNameFirstLower}Service.delete(id);
        return Result.success(true);
    }

    /**
     * 批量删除${classComment}
     */
    @DeleteMapping("/delete-batch")
    public Result<Boolean> deleteBatch(@RequestBody List<Long> ids) {
        ${classNameFirstLower}Service.deleteBatch(ids);
        return Result.success(true);
    }

    /**
     * 获得${classComment}详情
     */
    @GetMapping("/get/{id}")
    public Result<${className}RespVO> getById(@PathVariable("id") Long id) {
        ${className}DO ${classNameFirstLower} = ${classNameFirstLower}Service.getById(id);
        ${className}RespVO respVO = BeanUtil.copyProperties(${classNameFirstLower}, ${className}RespVO.class);
        return Result.success(respVO);
    }

    /**
     * 获得${classComment}分页列表
     */
    @GetMapping("/page")
    public Result<PageResult<${className}RespVO>> getPage(@Valid ${className}PageReqVO pageReqVO) {
        PageResult<${className}RespVO> pageResult = ${classNameFirstLower}Service.getPage(pageReqVO);
        return Result.success(pageResult);
    }

    /**
     * 导出${classComment} Excel
     */
    @GetMapping("/export")
    public void export(@Valid ${className}PageReqVO pageReqVO) {
        List<${className}DO> list = ${classNameFirstLower}Service.getList(pageReqVO);
        
        // 转换为 VO
        List<${className}RespVO> voList = list.stream()
                .map(item -> BeanUtil.copyProperties(item, ${className}RespVO.class))
                .collect(Collectors.toList());
        
        // TODO: 实现 Excel 导出逻辑
    }
}

