package ${packageName}.dal.mapper.${businessName};

import com.baomidou.mybatisplus.core.conditions.query.LambdaQueryWrapper;
import com.baomidou.mybatisplus.core.mapper.BaseMapper;
import ${packageName}.dal.dataobject.${businessName}.${subTable.className}DO;
import org.apache.ibatis.annotations.Mapper;
import org.apache.ibatis.annotations.Param;

import java.util.List;

/**
 * ${subTable.classComment} Mapper 接口（子表）
 *
 * @author ${author}
 * @since ${date}
 */
@Mapper
public interface ${subTable.className}Mapper extends BaseMapper<${subTable.className}DO> {

    /**
     * 根据主表ID查询子表列表
     * 
     * @param ${subJoinColumn.javaField} 主表ID
     * @return 子表列表
     */
    default List<${subTable.className}DO> selectListBy${subJoinColumn.javaField.substring(0,1).toUpperCase()}${subJoinColumn.javaField.substring(1)}(Long ${subJoinColumn.javaField}) {
        return selectList(new LambdaQueryWrapper<${subTable.className}DO>()
                .eq(${subTable.className}DO::get${subJoinColumn.javaField.substring(0,1).toUpperCase()}${subJoinColumn.javaField.substring(1)}, ${subJoinColumn.javaField}));
    }

    /**
     * 根据主表ID删除子表数据
     * 
     * @param ${subJoinColumn.javaField} 主表ID
     * @return 删除条数
     */
    default int deleteBy${subJoinColumn.javaField.substring(0,1).toUpperCase()}${subJoinColumn.javaField.substring(1)}(Long ${subJoinColumn.javaField}) {
        return delete(new LambdaQueryWrapper<${subTable.className}DO>()
                .eq(${subTable.className}DO::get${subJoinColumn.javaField.substring(0,1).toUpperCase()}${subJoinColumn.javaField.substring(1)}, ${subJoinColumn.javaField}));
    }

    /**
     * 批量插入子表数据
     * 
     * @param list 子表数据列表
     * @return 插入条数
     */
    int insertBatch(@Param("list") List<${subTable.className}DO> list);
}

