import request from '../../utils/request';

// ==================== 类型定义 ====================

/**
 * 分页结果
 */
export interface PageResult<T> {
  list: T[];
  total: number;
}

/**
 * ${classComment}
 */
export interface ${className} {
#foreach($column in $columns)
  ${column.javaField}?: #if(${column.javaType} == "String")string#elseif(${column.javaType} == "Integer" || ${column.javaType} == "Long" || ${column.javaType} == "BigDecimal")number#elseif(${column.javaType} == "Boolean")boolean#elseif(${column.javaType} == "LocalDateTime")string#else any#end;
#end
}

/**
 * ${classComment}查询参数
 */
export interface ${className}Query {
  pageNum?: number;
  pageSize?: number;
#foreach($column in $columns)
#if(${column.listOperation})
  ${column.javaField}?: #if(${column.javaType} == "String")string#elseif(${column.javaType} == "Integer" || ${column.javaType} == "Long" || ${column.javaType} == "BigDecimal")number#elseif(${column.javaType} == "Boolean")boolean#elseif(${column.javaType} == "LocalDateTime")string#else any#end;
#end
#end
}

/**
 * ${classComment}创建/编辑参数
 */
export interface ${className}Form {
#foreach($column in $columns)
#if(${column.createOperation} && !${column.primaryKey})
  ${column.javaField}?: #if(${column.javaType} == "String")string#elseif(${column.javaType} == "Integer" || ${column.javaType} == "Long" || ${column.javaType} == "BigDecimal")number#elseif(${column.javaType} == "Boolean")boolean#elseif(${column.javaType} == "LocalDateTime")string#else any#end;
#end
#end
}

// ==================== API 接口 ====================

/**
 * ${classComment}相关API
 */
export const ${classNameFirstLower}Api = {
  /**
   * 分页查询${classComment}列表
   */
  getPage: (params: ${className}Query): Promise<PageResult<${className}>> => {
    return request.get('/${businessName}/page', { params });
  },

  /**
   * 根据ID查询${classComment}
   */
  getById: (id: number): Promise<${className}> => {
    return request.get(`/${businessName}/${id}`);
  },

  /**
   * 创建${classComment}
   */
  create: (data: ${className}Form): Promise<number> => {
    return request.post('/${businessName}', data);
  },

  /**
   * 更新${classComment}
   */
  update: (id: number, data: ${className}Form): Promise<void> => {
    return request.put(`/${businessName}/${id}`, data);
  },

  /**
   * 删除${classComment}
   */
  delete: (id: number): Promise<void> => {
    return request.delete(`/${businessName}/${id}`);
  },

  /**
   * 批量删除${classComment}
   */
  deleteBatch: (ids: number[]): Promise<void> => {
    return request.delete(`/${businessName}/batch`, { data: { ids } });
  },
};
